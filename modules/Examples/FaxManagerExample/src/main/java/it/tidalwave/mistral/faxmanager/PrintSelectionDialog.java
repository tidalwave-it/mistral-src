/***********************************************************************************************************************
 *
 * Mistral - open source imaging engine
 * Copyright (C) 2003-2012 by Tidalwave s.a.s.
 *
 ***********************************************************************************************************************
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations under the License.
 *
 ***********************************************************************************************************************
 *
 * WWW: http://mistral.tidalwave.it
 * SCM: https://bitbucket.org/tidalwave/mistral-src
 *
 **********************************************************************************************************************/
package it.tidalwave.mistral.faxmanager;

import java.util.Collections;
import java.util.List;
import javax.swing.ButtonGroup;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;

/*******************************************************************************
 *
 * @author  Fabrizio Giudici
 * @version $Id$
 *
 ******************************************************************************/
public class PrintSelectionDialog extends JPanel 
  {
    private Selection selection = Selection.NONE;
    
    private final ButtonGroup buttonGroup = new ButtonGroup();
    
    public static enum Selection
      {
        NONE
          {
            @Override
            public List<Integer> getPageList (final PageManager pageManager)
              {
                return Collections.emptyList();
              }
          }, 
          
        CURRENT
          {
            @Override
            public List<Integer> getPageList (final PageManager pageManager)
              {
                return Collections.singletonList(pageManager.getPageNumber());
              }
          }, 
          
        ALL
          {
            @Override
            public List<Integer> getPageList (final PageManager pageManager)
              {
                return pageManager.getVisiblePageNumbers();
              }
          };
          
        public abstract List<Integer> getPageList (final PageManager pageManager);
      }
    
    public PrintSelectionDialog() 
      {
        initComponents();
        buttonGroup.add(btCurrentPage);
        buttonGroup.add(btAllPages);
        btCurrentPage.setSelected(true);
        selection = Selection.CURRENT;
      }
    
    public Selection getSelection()
      {
        return selection;    
      }
    
    /** 
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {

        btCurrentPage = new javax.swing.JRadioButton();
        btAllPages = new javax.swing.JRadioButton();
        btOk = new javax.swing.JButton();
        btCancel = new javax.swing.JButton();

        btCurrentPage.setText("Stampa solo la pagina corrente");
        btCurrentPage.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btCurrentPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCurrentPageActionPerformed(evt);
            }
        });

        btAllPages.setText("Stampa tutte le pagine");
        btAllPages.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btAllPages.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAllPagesActionPerformed(evt);
            }
        });

        btOk.setText("Ok");
        btOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btOkActionPerformed(evt);
            }
        });

        btCancel.setText("Cancel");
        btCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(btCurrentPage)
                    .add(btAllPages))
                .addContainerGap(47, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(107, Short.MAX_VALUE)
                .add(btOk)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(btCancel)
                .addContainerGap())
        );

        layout.linkSize(new java.awt.Component[] {btCancel, btOk}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(btCurrentPage)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(btAllPages)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 51, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btCancel)
                    .add(btOk))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

private void btOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btOkActionPerformed
    SwingUtilities.getWindowAncestor(this).dispose();
}//GEN-LAST:event_btOkActionPerformed

private void btCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelActionPerformed
    selection = Selection.NONE;
    SwingUtilities.getWindowAncestor(this).dispose();    
}//GEN-LAST:event_btCancelActionPerformed

private void btAllPagesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAllPagesActionPerformed
    selection = Selection.ALL;
}//GEN-LAST:event_btAllPagesActionPerformed

private void btCurrentPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCurrentPageActionPerformed
    selection = Selection.CURRENT;
}//GEN-LAST:event_btCurrentPageActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton btAllPages;
    private javax.swing.JButton btCancel;
    private javax.swing.JRadioButton btCurrentPage;
    private javax.swing.JButton btOk;
    // End of variables declaration//GEN-END:variables
    
}
